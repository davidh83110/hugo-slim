<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>雜七雜八 on David&#39;s Blog</title>
    <link>docs/categories/%E9%9B%9C%E4%B8%83%E9%9B%9C%E5%85%AB/</link>
    <description>Recent content in 雜七雜八 on David&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 31 Aug 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="docs/categories/%E9%9B%9C%E4%B8%83%E9%9B%9C%E5%85%AB/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Docker Note (Nginx&#43;uwsgi&#43;Letsencrypt)</title>
      <link>docs/blog/2017-08-31-docker-note/</link>
      <pubDate>Thu, 31 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>docs/blog/2017-08-31-docker-note/</guid>
      <description></description>
    </item>
    
    <item>
      <title>AI人工智慧講座筆記</title>
      <link>docs/blog/2017-07-23-ai-venue/</link>
      <pubDate>Sun, 23 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>docs/blog/2017-07-23-ai-venue/</guid>
      <description>今天聽了願景工程主辦的AI講座最吸引我想去的就是可以聽到創世神 杜奕瑾 分享他的經驗杜奕瑾是誰呢 相信各位鄉民應該不陌生他在1995年架設PTT這個到現在唯一存活的BBS此外他也架設蕃薯藤(小時候的回憶啊～)並成立公司蕃薯藤不為人知的是他是當時第一個做出中文搜尋的search engine之後杜奕瑾先生到了美國衛生研究院做基因分析研究然後到了微軟做Bing搜尋引擎直到最近熟為人之的微軟Cortana也是他一手策劃的 鄉民稱他為Cortana之父那正當AI如日中天的時候他居然選擇離開微軟回到台灣成立AI Lab傻了嗎？我也不知道原來是他覺得台灣在各方面都非常具有優勢但就是沒有人敢去整合 於是他決定要拋磚引玉回到台灣成立AI Lab 以國外的薪資邀請一等人才共同努力因為台灣對於軟體人才的薪資實在令人心酸所以他決定以國外的標準來留下人才當然也提到大家相當關注的軟體思維以及硬體思維如果大家有在follow國外的programmer應該不難發現國外沒有硬體不信的話列舉前幾大資訊產業 全都是軟體產業Microsoft , Google , Facebook &amp;hellip;等等唯獨台灣有軟體產業 也有硬體產業但要如何做一個完美結合，就有待時間證明了我反思的是他提到的國外都是軟體的世界流行的是Full stack engineer 全端工程師像我這種做系統管理的我想應該也很快會不再需要AWS已經推出Lamda 應該不難發現這個趨勢這大概也是我最近狂寫python的原因強迫自己拋棄bash shell當然Linux還是要懂 只是不在需要一個人專門管理應該走敏捷開發 一個人負責一小塊(cell)那一小塊裡包含所有東西從系統到後端程式到前端都由一個team負責以需求及系統來劃分部門而不是切割軟硬體part2.而AI對我們產業會帶來什麼衝擊？ 我在未來會被取代嗎？其實AI遠比我們想的要廣泛AI未來不只是AI，更是結合IoT成為AIoT進到我們的生活中你覺得只有專業攝影師拍得出來的照片AI經過學習(machine learning or deep learning)之後可以做得比人還好舉個例子出國要過海關為什麼自動通關可以被信賴？因為他的人臉辨識比我們的眼睛去看還要準確 也更少缺失這當然也是利用AI去學習，可以經由學習辨識真偽那現在有一位行銷人員提到很有趣的問題Facebook廣告投放一定要人去做嗎？利用AI去學習之後相信做出來的可以比人還準確而且機器不用休息，但是人需要未來越來越多產業會被取代不只是我們以為的藍領階級會被取代 白領也會 甚至是華爾街的會計師被我們忽略的是 AI抹殺了部分產業工作，是否延伸出其他工作機會呢？有的未來相信一定會很需要AI機器人管理師機器人的行為是需要被規範的 也需要訓練這部分的人才相信未來很搶手而另一個就是總要有人來教導大家如何使用AI機器人以及物聯網科技吧所以相信這在未來也是不可或缺的工作part3.眾所期待的pepper機器人出來跟大家見面他的學習能力已經令人難以理解 非常聰明並且跟之前在報導中看到的一樣pepper已經在很多地方服務了甚至做上班門禁管理也可以會人臉辨識你幾點上班自動打卡並分析你大概都幾點到公司有什麼特徵簡直比人還細心未來產業革命相信非常直得令人期待在工業5.0正式來臨前我們也需要自行upgrade文組該怎麼辦？當然也要學會寫code 這是和電腦溝通的唯一管道 就跟你會講一點英文一樣重要只能期許自己在這波浪潮正式到達台灣前做好應該做的準備Go lang , Python ,ubuntu ,spark &amp;hellip;等等，甚至是硬體都應該要熟練否則很輕易會追不上浪潮 被淘汰掉。</description>
    </item>
    
    <item>
      <title>Python發送警告訊息(Nagios &amp; Dingtalk)</title>
      <link>docs/blog/2017-07-08-python-nagios-dingtalk/</link>
      <pubDate>Sat, 08 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>docs/blog/2017-07-08-python-nagios-dingtalk/</guid>
      <description>退伍已經過了一個多月，生活漸漸步入軌道狂寫python練技術，卻有點不知道目標是什麼為了技術，有的人願意放棄80k月薪不禁讓我思考，出社會後如此庸庸碌碌真的是我要的生活嗎每天沈浸在程式海中，最後想得到什麼呢？我想得到的到底是技術還是高薪，如果兩者取其重，我會選哪個？人生真難阿因應最近公司SAP簡訊系統故障，業務又不回信只好利用原本Nagios發警告簡訊的機制去寫一個新程式發送警告訊息雖然還是不懂為何公司要用釘釘，既不安全也不可靠，或許這就是cost down的副作用吧程式放在github上原理是透過原本簡訊的log去抓關鍵字來發送訊息然後透過釘釘oapi用POST去發送消息或許將來哪天Nagios不用了，這程式也就失效了，未來可能需要再修正。</description>
    </item>
    
    <item>
      <title>Python套件urllib2簡介</title>
      <link>docs/blog/2017-02-05-urllib2-intro/</link>
      <pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>docs/blog/2017-02-05-urllib2-intro/</guid>
      <description>這裡就像哈利波特裡的儲思盆趁著我在當兵前還沒完全放空的時候把這些東西倒出來還以為我會很緊張要當兵了沒想到居然心如止水 來講講一個小套件今天講Python的一個小小小小套件 , urllib2基本上不需要額外安裝任何新的module就可以使用，所以用來救急很方便當有時候需要使用程式對某一網頁做POST或GET並獲得response時使用urllib2就非常方便簡單的幾行程式碼就可以搞定範例程式如下：我們對google首頁做GET/usr/bin/env python encoding: utf-8 import urllib2request = urllib2.Request(&amp;ldquo;http://www.google.com.tw/&amp;quot;)response = urllib2.urlopen(request)html = response.read()print html去執行python 程式名稱就可以看到GET網頁的內容了非常簡單且快速用來撈取資料或做POST、GET都很方便當然，你也可以使用linux環境下的wget、curl等套件來達成。因為腦袋放太空不適合一次寫太多東西就先這樣好了</description>
    </item>
    
    <item>
      <title>Linux指令 - ln 慘痛的教訓</title>
      <link>docs/blog/2017-01-25-linux-ln-exp/</link>
      <pubDate>Wed, 25 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>docs/blog/2017-01-25-linux-ln-exp/</guid>
      <description>用慘痛教訓換來經驗常常使用Linux做為系統的工程師應該都不陌生ln這個指令ln是對資料夾建立超連結的指令以下範例root@David-MacBook: ~ -&amp;gt; cd /tmproot@David-MacBook: tmp -&amp;gt; ln -s /opt/web/home/p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px 21; back00; back0, 0, 0, 0.85)} p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px f4; back00; back0, 0, 0, 0.85)} span.s1 {font-variant-ligatures: no-common-liga1e} span.s2 {font-variant-ligatures: no-common-ligaf4} span.s3 {font-variant-ligatures: no-common-ligatures} span.s4 {font-variant-ligatures: no-common-liga21} </description>
    </item>
    
  </channel>
</rss>