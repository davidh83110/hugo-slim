<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terraform on Hugo Future Imperfect Slim</title>
    <link>docs/categories/terraform/</link>
    <description>Recent content in Terraform on Hugo Future Imperfect Slim</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 14 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="docs/categories/terraform/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>EKS External-DNS Cross Account Route53 Setup</title>
      <link>docs/blog/2020-05-14-eks-external-dns/</link>
      <pubDate>Thu, 14 May 2020 00:00:00 +0000</pubDate>
      
      <guid>docs/blog/2020-05-14-eks-external-dns/</guid>
      <description>External-DNS 是一款可以讓我們建立 ALB Ingress 的時候，自動將 ALB DNS 在 Route53 建立一組 DNS 的實用套件。 當然他也支援在 GCP/Azure 上面建立，只是這邊就只介紹 AWS 上如何做設定，以及如果 Route53 在另一個 Account 的話要怎麼做。 在 EKS 1.14 以上使用了 OIDC ，所以如果跨帳號就會需要使用 OIDC 做授權。 External-DNS 官方介紹：
 Inspired by Kubernetes DNS, Kubernetes&amp;rsquo; cluster-internal DNS server, ExternalDNS makes Kubernetes resources discoverable via public DNS servers. Like KubeDNS, it retrieves a list of resources (Services, Ingresses, etc.) from the Kubernetes API to determine a desired list of DNS records.</description>
    </item>
    
    <item>
      <title>EKS Building &amp; Troubleshooting</title>
      <link>docs/blog/2020-03-30-eks-install/</link>
      <pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>docs/blog/2020-03-30-eks-install/</guid>
      <description>This is the full map of EKS and we&amp;rsquo;ll go through how to install EKS and plugins in this post, as well as the troubles I got. Let&amp;rsquo;s go! Quick Start an EKS with ADD-ONs  git clone https://github.com/davidh83110/eks-quickstart cd terraform &amp;amp;&amp;amp; make plan &amp;amp;&amp;amp; make apply cd ansible-playbooks ansible-playbook ./ You will get an EKS cluster and Node Group, also has metrics-server / k8s-dashboard / ALB-Ingress controller / Cluster-Autoscaler (CA) / Prometheus / Grafana / Weave.</description>
    </item>
    
    <item>
      <title>Terraform Module Private Registries - Bitbucket</title>
      <link>docs/blog/2019-02-03-terraform-module-bitbucket/</link>
      <pubDate>Sun, 03 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>docs/blog/2019-02-03-terraform-module-bitbucket/</guid>
      <description>Terraform Module Private Registries - Bitbucket  在網路上搜尋很久都很少看到 Terraform module 正確使用 remote private registry 的方式，所以來分享一下。
Due to less information on the internet when I am searching how terraform module access remote private registry, so I decide to share this. 先講講 Terraform module 是如何運作。其實就是直接 clone 一份下來，所以等於你去 git clone。
First, we need to know how Terraform module work, that is git clone, Terraform will clone the module repo which you use. 而我們都知道，git分為 HTTP(S) 以及 SSH 兩種clone方式，所以在這邊兩種方式都會介紹 (居然連stackoverflow都找不到到資料 T_T)</description>
    </item>
    
  </channel>
</rss>