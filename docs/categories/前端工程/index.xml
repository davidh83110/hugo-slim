<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>前端工程 on David&#39;s Blog</title>
    <link>/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B/</link>
    <description>Recent content in 前端工程 on David&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 05 Dec 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>前端工程(Front-End)簡介</title>
      <link>/blog/2016-12-05-web-intro-1/</link>
      <pubDate>Mon, 05 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/blog/2016-12-05-web-intro-1/</guid>
      <description>簡介網站架構 (Front-End)
   一般來說，我們瀏覽的網站都會分為前端以及後端    何謂前端？何謂後端？ &amp;nbsp;其實到現在快2017還是存在一點界定的爭議。  但我們通常會以程式功能來區別前後端，前端後端適當的整合才能架構出優良使用者體驗的網站。    前端工程(Front-End)   簡單來說，我們瀏覽的所有網站，不分大小，使用者(Client)端肉眼可見的全都稱為&#34;前端&#34;。  前端設計需要兼顧美感與實用，隨著近年來行動裝置的竄起，如何相容於不同裝置也成為一個重要課題。
優秀的前端工程師寫的程式通常會相容於各大瀏覽器以及行動裝置，並同時兼顧美感和實用。
  常見程式語言：HTML、CSS、JavaScript  常見框架：jQuery、BootStrap、AngularJS、Nodejs    何謂HTML？   傳統且古老的前端語言，前端工程師必備的語言能力。  在各大網站都不難發現採用HTML寫前端的網頁，至今已發展到HTML5。  以前無名小站寫部落格常用的超連結功能不知道還記得嗎？  &amp;lt;a href=&#34;www.davidh83110.com&#34;&amp;gt;David&#39;s HomePage&amp;lt;/a&amp;gt;   寫這一段語法如下面所示，就會變成文字超連結，這就是HTML，相信大家都不覺得陌生。
 David&#39;s HomePage 

HTML的架構？ 其實並沒有限制我們怎麼寫，有些人喜歡把&amp;lt;head&amp;gt;、&amp;lt;body&amp;gt;都寫出來才寫程式
其實你連&amp;lt;html&amp;gt;都不用寫，網頁就可以正常呈現了，所以說用法其實滿free的。
 但是對開發者來說，沒有規範卻是一件令人困擾的事，所以我們需要W3C制定的規範。
W3C大家應該不陌生，就是World Wide Web Consortium，簡稱W3C，中文翻譯為全球資訊網協會。
雖然說HTML沒有強制規定大家要怎麼寫，但是有一個全球統一的標準架構來參考還是比較ok的。
那為什麼我要照著W3C的標準來開發？ 1.瀏覽器的支援度很高
&amp;nbsp; &amp;nbsp; W3C的用意其實就是為了整合跨瀏覽器支援的問題，才有這一套制度規範，如果完全符合W3C的規範寫出來的網頁，通常在各大瀏覽器(FireFox、Chrome、Opera、Safari...)的呈現都是一樣的。
2.方便維護及管理
&amp;nbsp; &amp;nbsp; 全球統一標準，當然容易維護跟管理，同時也利於下一個接手的人修改程式碼，不至於完全看不懂。</description>
    </item>
    
  </channel>
</rss>